/*
 * 标准交易
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.yeepay.yop.scenario.bindcard.domain.model.trade.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.apache.commons.lang3.ObjectUtils;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * 响应结果
 */
public class YopQueryOrderRes implements Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 返回码&lt;br&gt;OPR00000 成功
     */
    @JsonProperty("code")
    private String code = null;

    /**
     * 返回信息
     */
    @JsonProperty("message")
    private String message = null;

    /**
     * 未命名
     */
    @JsonProperty("bizSystemNo")
    private String bizSystemNo = null;

    /**
     * 交易发起方商编
     */
    @JsonProperty("parentMerchantNo")
    private String parentMerchantNo = null;

    /**
     * 收款商户编号
     */
    @JsonProperty("merchantNo")
    private String merchantNo = null;

    /**
     * 商户收款请求号
     */
    @JsonProperty("orderId")
    private String orderId = null;

    /**
     * 易宝收款订单号&lt;br&gt;&lt;span style&#x3D;\&quot;font-family: Arial, sans-serif;\&quot;&gt;易宝收款订单号&lt;/span&gt;
     */
    @JsonProperty("uniqueOrderNo")
    private String uniqueOrderNo = null;

    /**
     * 订单状态&lt;br&gt;PROCESSING：订单待支付&lt;br&gt;SUCCESS：订单支付成功&lt;br&gt;TIME_OUT：订单已过期&lt;br&gt;FAIL:订单支付失败&lt;br&gt;CLOSE:订单关闭
     */
    @JsonProperty("status")
    private String status = null;

    /**
     * 订单金额.单位:元
     */
    @JsonProperty("orderAmount")
    private BigDecimal orderAmount = null;

    /**
     * 用户支付金额,单位:元
     */
    @JsonProperty("payAmount")
    private BigDecimal payAmount = null;

    /**
     * 商户手续费&lt;br&gt;商户承担的手续费金额.单位:元
     */
    @JsonProperty("merchantFee")
    private BigDecimal merchantFee = null;

    /**
     * 用户手续费,用户付费场景下返回.单位:元
     */
    @JsonProperty("customerFee")
    private BigDecimal customerFee = null;

    /**
     * 支付成功时间
     */
    @JsonProperty("paySuccessDate")
    private String paySuccessDate = null;

    /**
     * 对账备注&lt;br&gt;商户自定义参数，会展示在交易对账单中
     */
    @JsonProperty("memo")
    private String memo = null;

    /**
     * 支付方式&lt;br&gt;USER_SCAN：用户扫码MERCHANT_SCAN：商家扫码JS_PAY：JS支付MINI_PROGRAM：小程序支付WECHAT_OFFIACCOUNT：微信公众号支付ALIPAY_LIFE：生活号支付FACE_SCAN_PAY：刷脸支付SDK_PAY：SDK支付H5_PAY：H5支付ONEKEYPAY：一键支付BINDCARDPAY：绑卡支付E_BANK：网银支付ENTERPRISE_ACCOUNT_PAY：企业账户支付&lt;br&gt;ACCOUNT_BOOK_PAY: 记帐簿支付
     */
    @JsonProperty("payWay")
    private String payWay = null;

    /**
     * 支付授权token，用于调用支付
     */
    @JsonProperty("token")
    private String token = null;

    /**
     * 分账都订单标识&lt;br&gt;分账订单标识:&lt;br&gt;DELAY_SETTLE:分账&lt;br&gt;REAL_TIME:不分账
     */
    @JsonProperty("fundProcessType")
    private String fundProcessType = null;

    /**
     * 银行订单号&lt;br&gt;支付机构在银网联侧的单号,该单号也是支付机构在微信侧的外部商户订单号.&lt;br&gt;使用场景:&lt;br&gt;(1) 跨境报关&lt;br&gt;(2) 服务商用于点金计划商户小票功能
     */
    @JsonProperty("bankOrderId")
    private String bankOrderId = null;

    /**
     * 渠道订单号&lt;br&gt;该笔订单在微信、支付宝或银行侧系统生成的单号
     */
    @JsonProperty("channelOrderId")
    private String channelOrderId = null;

    /**
     * 渠道类型:&lt;br&gt;WECHAT：微信&lt;br&gt;ALIPAY：支付宝&lt;br&gt;UNIONPAY：银联&lt;br&gt;APPLEPAY：苹果支付&lt;br&gt;DCEP:数字人民币&lt;br&gt;仅聚合支付会返回该参数
     */
    @JsonProperty("channel")
    private String channel = null;

    /**
     * 用户实际支付金额
     */
    @JsonProperty("realPayAmount")
    private BigDecimal realPayAmount = null;

    /**
     * 剩余可分账金额;(用于分账的场景)
     */
    @JsonProperty("unSplitAmount")
    private BigDecimal unSplitAmount = null;

    /**
     *
     */
    @JsonProperty("payerInfo")
    private PayerInfo payerInfo = null;

    /**
     *
     */
    @JsonProperty("channelPromotionInfo")
    private List<ChannelPromotionInfo> channelPromotionInfo = null;

    /**
     *
     */
    @JsonProperty("ypPromotionInfo")
    private List<YpPromotionInfo> ypPromotionInfo = null;

    public YopQueryOrderRes code(String code) {
        this.code = code;
        return this;
    }

    /**
     * 返回码&lt;br&gt;OPR00000 成功
     *
     * @return code
     **/

    public String getCode() {
        return code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    public YopQueryOrderRes message(String message) {
        this.message = message;
        return this;
    }

    /**
     * 返回信息
     *
     * @return message
     **/

    public String getMessage() {
        return message;
    }

    public void setMessage(String message) {
        this.message = message;
    }

    public YopQueryOrderRes bizSystemNo(String bizSystemNo) {
        this.bizSystemNo = bizSystemNo;
        return this;
    }

    /**
     * 未命名
     *
     * @return bizSystemNo
     **/

    public String getBizSystemNo() {
        return bizSystemNo;
    }

    public void setBizSystemNo(String bizSystemNo) {
        this.bizSystemNo = bizSystemNo;
    }

    public YopQueryOrderRes parentMerchantNo(String parentMerchantNo) {
        this.parentMerchantNo = parentMerchantNo;
        return this;
    }

    /**
     * 交易发起方商编
     *
     * @return parentMerchantNo
     **/

    public String getParentMerchantNo() {
        return parentMerchantNo;
    }

    public void setParentMerchantNo(String parentMerchantNo) {
        this.parentMerchantNo = parentMerchantNo;
    }

    public YopQueryOrderRes merchantNo(String merchantNo) {
        this.merchantNo = merchantNo;
        return this;
    }

    /**
     * 收款商户编号
     *
     * @return merchantNo
     **/

    public String getMerchantNo() {
        return merchantNo;
    }

    public void setMerchantNo(String merchantNo) {
        this.merchantNo = merchantNo;
    }

    public YopQueryOrderRes orderId(String orderId) {
        this.orderId = orderId;
        return this;
    }

    /**
     * 商户收款请求号
     *
     * @return orderId
     **/

    public String getOrderId() {
        return orderId;
    }

    public void setOrderId(String orderId) {
        this.orderId = orderId;
    }

    public YopQueryOrderRes uniqueOrderNo(String uniqueOrderNo) {
        this.uniqueOrderNo = uniqueOrderNo;
        return this;
    }

    /**
     * 易宝收款订单号&lt;br&gt;&lt;span style&#x3D;\&quot;font-family: Arial, sans-serif;\&quot;&gt;易宝收款订单号&lt;/span&gt;
     *
     * @return uniqueOrderNo
     **/

    public String getUniqueOrderNo() {
        return uniqueOrderNo;
    }

    public void setUniqueOrderNo(String uniqueOrderNo) {
        this.uniqueOrderNo = uniqueOrderNo;
    }

    public YopQueryOrderRes status(String status) {
        this.status = status;
        return this;
    }

    /**
     * 订单状态&lt;br&gt;PROCESSING：订单待支付&lt;br&gt;SUCCESS：订单支付成功&lt;br&gt;TIME_OUT：订单已过期&lt;br&gt;FAIL:订单支付失败&lt;br&gt;CLOSE:订单关闭
     *
     * @return status
     **/

    public String getStatus() {
        return status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public YopQueryOrderRes orderAmount(BigDecimal orderAmount) {
        this.orderAmount = orderAmount;
        return this;
    }

    /**
     * 订单金额.单位:元
     *
     * @return orderAmount
     **/

    public BigDecimal getOrderAmount() {
        return orderAmount;
    }

    public void setOrderAmount(BigDecimal orderAmount) {
        this.orderAmount = orderAmount;
    }

    public YopQueryOrderRes payAmount(BigDecimal payAmount) {
        this.payAmount = payAmount;
        return this;
    }

    /**
     * 用户支付金额,单位:元
     *
     * @return payAmount
     **/

    public BigDecimal getPayAmount() {
        return payAmount;
    }

    public void setPayAmount(BigDecimal payAmount) {
        this.payAmount = payAmount;
    }

    public YopQueryOrderRes merchantFee(BigDecimal merchantFee) {
        this.merchantFee = merchantFee;
        return this;
    }

    /**
     * 商户手续费&lt;br&gt;商户承担的手续费金额.单位:元
     *
     * @return merchantFee
     **/

    public BigDecimal getMerchantFee() {
        return merchantFee;
    }

    public void setMerchantFee(BigDecimal merchantFee) {
        this.merchantFee = merchantFee;
    }

    public YopQueryOrderRes customerFee(BigDecimal customerFee) {
        this.customerFee = customerFee;
        return this;
    }

    /**
     * 用户手续费,用户付费场景下返回.单位:元
     *
     * @return customerFee
     **/

    public BigDecimal getCustomerFee() {
        return customerFee;
    }

    public void setCustomerFee(BigDecimal customerFee) {
        this.customerFee = customerFee;
    }

    public YopQueryOrderRes paySuccessDate(String paySuccessDate) {
        this.paySuccessDate = paySuccessDate;
        return this;
    }

    /**
     * 支付成功时间
     *
     * @return paySuccessDate
     **/

    public String getPaySuccessDate() {
        return paySuccessDate;
    }

    public void setPaySuccessDate(String paySuccessDate) {
        this.paySuccessDate = paySuccessDate;
    }

    public YopQueryOrderRes memo(String memo) {
        this.memo = memo;
        return this;
    }

    /**
     * 对账备注&lt;br&gt;商户自定义参数，会展示在交易对账单中
     *
     * @return memo
     **/

    public String getMemo() {
        return memo;
    }

    public void setMemo(String memo) {
        this.memo = memo;
    }

    public YopQueryOrderRes payWay(String payWay) {
        this.payWay = payWay;
        return this;
    }

    /**
     * 支付方式&lt;br&gt;USER_SCAN：用户扫码MERCHANT_SCAN：商家扫码JS_PAY：JS支付MINI_PROGRAM：小程序支付WECHAT_OFFIACCOUNT：微信公众号支付ALIPAY_LIFE：生活号支付FACE_SCAN_PAY：刷脸支付SDK_PAY：SDK支付H5_PAY：H5支付ONEKEYPAY：一键支付BINDCARDPAY：绑卡支付E_BANK：网银支付ENTERPRISE_ACCOUNT_PAY：企业账户支付&lt;br&gt;ACCOUNT_BOOK_PAY: 记帐簿支付
     *
     * @return payWay
     **/

    public String getPayWay() {
        return payWay;
    }

    public void setPayWay(String payWay) {
        this.payWay = payWay;
    }

    public YopQueryOrderRes token(String token) {
        this.token = token;
        return this;
    }

    /**
     * 支付授权token，用于调用支付
     *
     * @return token
     **/

    public String getToken() {
        return token;
    }

    public void setToken(String token) {
        this.token = token;
    }

    public YopQueryOrderRes fundProcessType(String fundProcessType) {
        this.fundProcessType = fundProcessType;
        return this;
    }

    /**
     * 分账都订单标识&lt;br&gt;分账订单标识:&lt;br&gt;DELAY_SETTLE:分账&lt;br&gt;REAL_TIME:不分账
     *
     * @return fundProcessType
     **/

    public String getFundProcessType() {
        return fundProcessType;
    }

    public void setFundProcessType(String fundProcessType) {
        this.fundProcessType = fundProcessType;
    }

    public YopQueryOrderRes bankOrderId(String bankOrderId) {
        this.bankOrderId = bankOrderId;
        return this;
    }

    /**
     * 银行订单号&lt;br&gt;支付机构在银网联侧的单号,该单号也是支付机构在微信侧的外部商户订单号.&lt;br&gt;使用场景:&lt;br&gt;(1) 跨境报关&lt;br&gt;(2) 服务商用于点金计划商户小票功能
     *
     * @return bankOrderId
     **/

    public String getBankOrderId() {
        return bankOrderId;
    }

    public void setBankOrderId(String bankOrderId) {
        this.bankOrderId = bankOrderId;
    }

    public YopQueryOrderRes channelOrderId(String channelOrderId) {
        this.channelOrderId = channelOrderId;
        return this;
    }

    /**
     * 渠道订单号&lt;br&gt;该笔订单在微信、支付宝或银行侧系统生成的单号
     *
     * @return channelOrderId
     **/

    public String getChannelOrderId() {
        return channelOrderId;
    }

    public void setChannelOrderId(String channelOrderId) {
        this.channelOrderId = channelOrderId;
    }

    public YopQueryOrderRes channel(String channel) {
        this.channel = channel;
        return this;
    }

    /**
     * 渠道类型:&lt;br&gt;WECHAT：微信&lt;br&gt;ALIPAY：支付宝&lt;br&gt;UNIONPAY：银联&lt;br&gt;APPLEPAY：苹果支付&lt;br&gt;DCEP:数字人民币&lt;br&gt;仅聚合支付会返回该参数
     *
     * @return channel
     **/

    public String getChannel() {
        return channel;
    }

    public void setChannel(String channel) {
        this.channel = channel;
    }

    public YopQueryOrderRes realPayAmount(BigDecimal realPayAmount) {
        this.realPayAmount = realPayAmount;
        return this;
    }

    /**
     * 用户实际支付金额
     *
     * @return realPayAmount
     **/

    public BigDecimal getRealPayAmount() {
        return realPayAmount;
    }

    public void setRealPayAmount(BigDecimal realPayAmount) {
        this.realPayAmount = realPayAmount;
    }

    public YopQueryOrderRes unSplitAmount(BigDecimal unSplitAmount) {
        this.unSplitAmount = unSplitAmount;
        return this;
    }

    /**
     * 剩余可分账金额;(用于分账的场景)
     *
     * @return unSplitAmount
     **/

    public BigDecimal getUnSplitAmount() {
        return unSplitAmount;
    }

    public void setUnSplitAmount(BigDecimal unSplitAmount) {
        this.unSplitAmount = unSplitAmount;
    }

    public YopQueryOrderRes payerInfo(PayerInfo payerInfo) {
        this.payerInfo = payerInfo;
        return this;
    }

    /**
     * Get payerInfo
     *
     * @return payerInfo
     **/

    public PayerInfo getPayerInfo() {
        return payerInfo;
    }

    public void setPayerInfo(PayerInfo payerInfo) {
        this.payerInfo = payerInfo;
    }

    public YopQueryOrderRes channelPromotionInfo(List<ChannelPromotionInfo> channelPromotionInfo) {
        this.channelPromotionInfo = channelPromotionInfo;
        return this;
    }

    public YopQueryOrderRes addChannelPromotionInfoItem(ChannelPromotionInfo channelPromotionInfoItem) {
        if (this.channelPromotionInfo == null) {
            this.channelPromotionInfo = new ArrayList<>();
        }
        this.channelPromotionInfo.add(channelPromotionInfoItem);
        return this;
    }

    /**
     * Get channelPromotionInfo
     *
     * @return channelPromotionInfo
     **/

    public List<ChannelPromotionInfo> getChannelPromotionInfo() {
        return channelPromotionInfo;
    }

    public void setChannelPromotionInfo(List<ChannelPromotionInfo> channelPromotionInfo) {
        this.channelPromotionInfo = channelPromotionInfo;
    }

    public YopQueryOrderRes ypPromotionInfo(List<YpPromotionInfo> ypPromotionInfo) {
        this.ypPromotionInfo = ypPromotionInfo;
        return this;
    }

    public YopQueryOrderRes addYpPromotionInfoItem(YpPromotionInfo ypPromotionInfoItem) {
        if (this.ypPromotionInfo == null) {
            this.ypPromotionInfo = new ArrayList<>();
        }
        this.ypPromotionInfo.add(ypPromotionInfoItem);
        return this;
    }

    /**
     * Get ypPromotionInfo
     *
     * @return ypPromotionInfo
     **/

    public List<YpPromotionInfo> getYpPromotionInfo() {
        return ypPromotionInfo;
    }

    public void setYpPromotionInfo(List<YpPromotionInfo> ypPromotionInfo) {
        this.ypPromotionInfo = ypPromotionInfo;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        YopQueryOrderRes yopQueryOrderRes = (YopQueryOrderRes) o;
        return ObjectUtils.equals(this.code, yopQueryOrderRes.code) &&
                ObjectUtils.equals(this.message, yopQueryOrderRes.message) &&
                ObjectUtils.equals(this.bizSystemNo, yopQueryOrderRes.bizSystemNo) &&
                ObjectUtils.equals(this.parentMerchantNo, yopQueryOrderRes.parentMerchantNo) &&
                ObjectUtils.equals(this.merchantNo, yopQueryOrderRes.merchantNo) &&
                ObjectUtils.equals(this.orderId, yopQueryOrderRes.orderId) &&
                ObjectUtils.equals(this.uniqueOrderNo, yopQueryOrderRes.uniqueOrderNo) &&
                ObjectUtils.equals(this.status, yopQueryOrderRes.status) &&
                ObjectUtils.equals(this.orderAmount, yopQueryOrderRes.orderAmount) &&
                ObjectUtils.equals(this.payAmount, yopQueryOrderRes.payAmount) &&
                ObjectUtils.equals(this.merchantFee, yopQueryOrderRes.merchantFee) &&
                ObjectUtils.equals(this.customerFee, yopQueryOrderRes.customerFee) &&
                ObjectUtils.equals(this.paySuccessDate, yopQueryOrderRes.paySuccessDate) &&
                ObjectUtils.equals(this.memo, yopQueryOrderRes.memo) &&
                ObjectUtils.equals(this.payWay, yopQueryOrderRes.payWay) &&
                ObjectUtils.equals(this.token, yopQueryOrderRes.token) &&
                ObjectUtils.equals(this.fundProcessType, yopQueryOrderRes.fundProcessType) &&
                ObjectUtils.equals(this.bankOrderId, yopQueryOrderRes.bankOrderId) &&
                ObjectUtils.equals(this.channelOrderId, yopQueryOrderRes.channelOrderId) &&
                ObjectUtils.equals(this.channel, yopQueryOrderRes.channel) &&
                ObjectUtils.equals(this.realPayAmount, yopQueryOrderRes.realPayAmount) &&
                ObjectUtils.equals(this.unSplitAmount, yopQueryOrderRes.unSplitAmount) &&
                ObjectUtils.equals(this.payerInfo, yopQueryOrderRes.payerInfo) &&
                ObjectUtils.equals(this.channelPromotionInfo, yopQueryOrderRes.channelPromotionInfo) &&
                ObjectUtils.equals(this.ypPromotionInfo, yopQueryOrderRes.ypPromotionInfo);
    }

    @Override
    public int hashCode() {
        return ObjectUtils.hashCodeMulti(code, message, bizSystemNo, parentMerchantNo, merchantNo, orderId, uniqueOrderNo, status, orderAmount, payAmount, merchantFee, customerFee, paySuccessDate, memo, payWay, token, fundProcessType, bankOrderId, channelOrderId, channel, realPayAmount, unSplitAmount, payerInfo, channelPromotionInfo, ypPromotionInfo);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class YopQueryOrderResDTO {\n");

        sb.append("    code: ").append(toIndentedString(code)).append("\n");
        sb.append("    message: ").append(toIndentedString(message)).append("\n");
        sb.append("    bizSystemNo: ").append(toIndentedString(bizSystemNo)).append("\n");
        sb.append("    parentMerchantNo: ").append(toIndentedString(parentMerchantNo)).append("\n");
        sb.append("    merchantNo: ").append(toIndentedString(merchantNo)).append("\n");
        sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
        sb.append("    uniqueOrderNo: ").append(toIndentedString(uniqueOrderNo)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    orderAmount: ").append(toIndentedString(orderAmount)).append("\n");
        sb.append("    payAmount: ").append(toIndentedString(payAmount)).append("\n");
        sb.append("    merchantFee: ").append(toIndentedString(merchantFee)).append("\n");
        sb.append("    customerFee: ").append(toIndentedString(customerFee)).append("\n");
        sb.append("    paySuccessDate: ").append(toIndentedString(paySuccessDate)).append("\n");
        sb.append("    memo: ").append(toIndentedString(memo)).append("\n");
        sb.append("    payWay: ").append(toIndentedString(payWay)).append("\n");
        sb.append("    token: ").append(toIndentedString(token)).append("\n");
        sb.append("    fundProcessType: ").append(toIndentedString(fundProcessType)).append("\n");
        sb.append("    bankOrderId: ").append(toIndentedString(bankOrderId)).append("\n");
        sb.append("    channelOrderId: ").append(toIndentedString(channelOrderId)).append("\n");
        sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
        sb.append("    realPayAmount: ").append(toIndentedString(realPayAmount)).append("\n");
        sb.append("    unSplitAmount: ").append(toIndentedString(unSplitAmount)).append("\n");
        sb.append("    payerInfo: ").append(toIndentedString(payerInfo)).append("\n");
        sb.append("    channelPromotionInfo: ").append(toIndentedString(channelPromotionInfo)).append("\n");
        sb.append("    ypPromotionInfo: ").append(toIndentedString(ypPromotionInfo)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

