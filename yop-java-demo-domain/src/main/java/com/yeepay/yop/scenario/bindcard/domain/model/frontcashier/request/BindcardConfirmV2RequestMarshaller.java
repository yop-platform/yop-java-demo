/*
 * 前置收银台
 * 前置收银台
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.yeepay.yop.scenario.bindcard.domain.model.frontcashier.request;

import com.yeepay.yop.sdk.http.Headers;
import com.yeepay.yop.sdk.http.HttpMethodName;
import com.yeepay.yop.sdk.http.YopContentType;
import com.yeepay.yop.sdk.internal.DefaultRequest;
import com.yeepay.yop.sdk.internal.Request;
import com.yeepay.yop.sdk.model.transform.RequestMarshaller;
import com.yeepay.yop.sdk.protocol.marshaller.PrimitiveMarshallerUtils;

import java.util.Map;
import java.util.UUID;


public class BindcardConfirmV2RequestMarshaller implements RequestMarshaller<BindcardConfirmV2Request> {
    private final String serviceName = "Frontcashier";

    private final String resourcePath = "/rest/v2.0/frontcashier/bindcard/confirm";

    private final String contentType = "application/x-www-form-urlencoded";

    private final HttpMethodName httpMethodName = HttpMethodName.POST;

    public static BindcardConfirmV2RequestMarshaller getInstance() {
        return CacheInstanceHolder.INSTANCE;
    }

    @Override
    public Request<BindcardConfirmV2Request> marshall(BindcardConfirmV2Request request) {
        Request<BindcardConfirmV2Request> internalRequest = new DefaultRequest<BindcardConfirmV2Request>(request, serviceName);
        internalRequest.setResourcePath(resourcePath);
        internalRequest.setHttpMethod(httpMethodName);
        if (!internalRequest.getHeaders().containsKey(Headers.YOP_REQUEST_ID)) {
            String requestId = UUID.randomUUID().toString();
            internalRequest.addHeader(Headers.YOP_REQUEST_ID, requestId);
        }
        Map<String, String> customerHeaders = request.getHeaders();
        if (customerHeaders != null) {
            for (String key : customerHeaders.keySet()) {
                internalRequest.addHeader(key, customerHeaders.get(key));
            }
        }
        if (request.getParentMerchantNo() != null) {
            internalRequest.addParameter("parentMerchantNo", PrimitiveMarshallerUtils.marshalling(request.getParentMerchantNo(), "String"));
        }
        if (request.getMerchantNo() != null) {
            internalRequest.addParameter("merchantNo", PrimitiveMarshallerUtils.marshalling(request.getMerchantNo(), "String"));
        }
        if (request.getMerchantFlowId() != null) {
            internalRequest.addParameter("merchantFlowId", PrimitiveMarshallerUtils.marshalling(request.getMerchantFlowId(), "String"));
        }
        if (request.getSmsCode() != null) {
            internalRequest.addParameter("smsCode", PrimitiveMarshallerUtils.marshalling(request.getSmsCode(), "String"));
        }
        internalRequest.setContentType(YopContentType.FORM_URL_ENCODE);
        internalRequest.addHeader(Headers.CONTENT_TYPE, internalRequest.getContentType().getValue());
        return internalRequest;
    }

    private static class CacheInstanceHolder {
        public static BindcardConfirmV2RequestMarshaller INSTANCE = new BindcardConfirmV2RequestMarshaller();

        private CacheInstanceHolder() {
        }
    }
}
